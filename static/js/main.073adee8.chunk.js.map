{"version":3,"sources":["components/SideDrawer/side-drawer.module.css","components/Navigation/NavigationItems/NavigationItem/navigation-item.module.css","components/Navigation/ToolBar/tool-bar.module.css","components/Logo/logo.module.css","components/Navigation/NavigationItems/navigation-items.module.css","components/SideDrawer/DrawerToggle/drawer-toggle.module.css","assets/images/logo.png","components/Logo/Logo.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/SideDrawer/DrawerToggle/DrawerToggle.js","components/Navigation/ToolBar/ToolBar.js","components/SideDrawer/SideDrawer.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Logo","className","styles","logo","src","burgerLogo","alt","NavigationItem","props","attachedClasses","navItem","buttonLink","join","to","link","activeClassName","active","exact","children","NavigationItems","navItems","DrawerToggle","drawerToggle","onClick","clicked","Toolbar","toolBar","drawerToggleClicked","deskTopOnly","isAuthenticated","SideDrawer","sideDrawer","open","close","closed","sideDrawerHeader","closeButton","App","useState","sideDrawerIsVisible","setSideDrawerIsVisible","ToolBar","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.073adee8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"sideDrawer\":\"side-drawer_sideDrawer__2r6dE\",\"closeButton\":\"side-drawer_closeButton__3scQu\",\"open\":\"side-drawer_open__aTSVP\",\"close\":\"side-drawer_close__1Nzru\",\"logo\":\"side-drawer_logo__1wgUP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navItem\":\"navigation-item_navItem__2LTzd\",\"buttonLink\":\"navigation-item_buttonLink__2dIG2\",\"active\":\"navigation-item_active__lKTrX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"toolBar\":\"tool-bar_toolBar__1KOrt\",\"logo\":\"tool-bar_logo__uuHg_\",\"deskTopOnly\":\"tool-bar_deskTopOnly__23WIV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo\":\"logo_logo__J-Pf4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navItems\":\"navigation-items_navItems__J91K_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"drawerToggle\":\"drawer-toggle_drawerToggle__3we1x\"};","export default __webpack_public_path__ + \"static/media/logo.b9fcd954.png\";","import styles from './logo.module.css';\nimport burgerLogo from '../../assets/images/logo.png';\nconst Logo = () => (\n    <div className={styles.logo}>\n        <img src={burgerLogo} alt=\"MyBurger\" />\n    </div>\n);\n\nexport default Logo;","import React from 'react';\nimport styles from './navigation-item.module.css';\nimport { NavLink } from 'react-router-dom';\nconst NavigationItem = (props) => {\n    let attachedClasses = [styles.navItem];\n    if (props.buttonLink) {\n        attachedClasses = [styles.navItem, styles.buttonLink];\n    }\n    return <li className={attachedClasses.join(' ')}>\n        <NavLink\n            to={props.link}\n            activeClassName={styles.active}\n            exact={props.exact}>\n            {props.children}\n        </NavLink>\n    </li>\n}\nexport default NavigationItem;","import NavigationItem from './NavigationItem/NavigationItem'\nimport styles from './navigation-items.module.css';\nconst NavigationItems = () => (\n    <ul className={styles.navItems}>\n        <NavigationItem link='/patients' exact>Patient</NavigationItem>\n        <NavigationItem link='/caregivers'>Caregivers</NavigationItem>\n        <NavigationItem link='/nursers'>Nurses</NavigationItem>\n        <NavigationItem link='/providers'>HealthCare Providers</NavigationItem>\n        <NavigationItem link='/about'>About</NavigationItem>\n        <NavigationItem link='/contact'>Contact</NavigationItem>\n        <NavigationItem link='/signup' buttonLink>\n            <button>SIGNUP / LOGIN</button>\n        </NavigationItem>\n    </ul>\n);\nexport default NavigationItems;","import styles from './drawer-toggle.module.css';\nconst DrawerToggle = (props) => (\n    <div className={styles.drawerToggle} onClick={props.clicked}>\n        <div></div>\n        <div></div>\n        <div></div>\n    </div>\n);\nexport default DrawerToggle;","import styles from './tool-bar.module.css';\nimport Logo from '../../Logo/Logo';\nimport NavigationItems from '../NavigationItems/NavigationItems';\nimport DrawerToggle from '../../SideDrawer/DrawerToggle/DrawerToggle';\nconst Toolbar = (props) => (\n    <header className={styles.toolBar}>\n        <div className={styles.logo}>\n            <Logo />\n        </div>\n        <DrawerToggle clicked={props.drawerToggleClicked} />\n        <nav className={styles.deskTopOnly}>\n            <NavigationItems isAuthenticated={props.isAuthenticated} />\n        </nav>\n    </header>\n);\n\nexport default Toolbar;","import NavigationItems from '../Navigation/NavigationItems/NavigationItems';\nimport styles from './side-drawer.module.css'\nimport Logo from '../Logo/Logo';\nconst SideDrawer = (props) => {\n    let attachedClasses = [styles.sideDrawer, styles.open];\n    if (!props.open) {\n        attachedClasses = [styles.sideDrawer, styles.close];\n    }\n    return (\n        <>\n            <div className={attachedClasses.join(' ')} onClick={props.closed}>\n                <div className={styles.sideDrawerHeader}>\n                    <div className={styles.logo}>\n                        <Logo />\n                    </div>\n                    {props.open ? <span className={styles.closeButton} onClick={props.clicked}></span> : null}\n                </div>\n                <nav>\n                    <NavigationItems />\n                </nav>\n            </div>\n        </>\n    );\n}\n\nexport default SideDrawer;","import { useState } from 'react'\nimport ToolBar from './components/Navigation/ToolBar/ToolBar'\nimport SideDrawer from './components/SideDrawer/SideDrawer'\nimport './App.css';\nfunction App() {\n  const [sideDrawerIsVisible, setSideDrawerIsVisible] = useState(false);\n\n  const sideDrawerClosedHandler = () => {\n    setSideDrawerIsVisible(false);\n  }\n\n  const sideDrawerToggleHandler = () => {\n    setSideDrawerIsVisible(!sideDrawerIsVisible);\n  }\n  return (\n    <div className=\"App\">\n      <ToolBar drawerToggleClicked={sideDrawerToggleHandler} />\n      <SideDrawer\n        open={sideDrawerIsVisible}\n        closed={sideDrawerClosedHandler} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom'\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}